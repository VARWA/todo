name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
      - homework_4

jobs:
  analyze:
    name: Run analyzer and formatter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.5'
          cache: true
      - run: |
          echo "${{ secrets.ENV }}" > .env
      - run: flutter pub get
      - run: flutter analyze
      - run: dart format --set-exit-if-changed .
  build_ios:
    name: Build app (IOS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.5'
      - run: |
          echo "${{ secrets.ENV }}" > .env
      - run: flutter build ios --no-codesign
  build_android:
    name: Build app (Android)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.10.5'
          cache: true
      - run: |
          echo "${{ secrets.ENV }}" > .env
      - run: flutter build apk
  ios:
    name: Integration test (IOS)
    strategy:
      matrix:
        device:
          - "iPhone 11 Simulator (15.2)"
      fail-fast: true
    runs-on: macos-11 # or macos-latest if you prefer, but be aware that the available simulators could be different if you run a different version
    steps:
      - name: "List all simulators"
        run: "xcrun xctrace list devices"
      - name: "Start Simulator"
        run: |
          UDID=$(xcrun xctrace list devices | grep "^${{ matrix.device }}" | awk '{gsub(/[()]/,""); print $NF}')
          echo $UDID
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
      - uses: actions/checkout@v3
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.10.5'
          cache: true
      - run: |
          echo "${{ secrets.ENV }}" > .env
      - name: Install Flutter dependencies
        run: flutter pub get
      - name: Run integration tests
        run: flutter test integration_test --verbose
  android:
    name: Integration test (Andriod)
    runs-on: macos-11
    strategy:
      matrix:
        api-level:
          - 29
          # you can add more API level if you want to run your tests on different API
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.10.5'
          cache: true
      - run: |
          echo "${{ secrets.ENV }}" > .env
      - name: Install Flutter dependencies
        run: flutter pub get
      - name: Run integration tests
        # more info on https://github.com/ReactiveCircus/android-emulator-runner
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          profile: Nexus 6
          script: flutter test integration_test --verbose